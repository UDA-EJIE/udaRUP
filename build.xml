<?xml version="1.0"?>
<project name="uda" default="buildVersion">
    
	<property name="udaVersion" value="6.2.0"/>
    <property name="previousUdaVersion" value="6.1.0"/>
    <property name="udaLibVersion" value="6.2.0"/>
    <property name="previousUdaLibVersion" value="6.1.0"/>
    
    <property name="baseDir" value="../"/>
    <property name="destDir" value="${baseDir}/dist"/>
    
    <property name="udaRupBaseDir" value="${baseDir}/udaRUP"/>
    <property name="udaRupBuildDir" value="${udaRupBaseDir}/dist"/>
    <property name="udaRupDestDir" value="${destDir}/udaRup/${udaVersion}"/>
    <property name="udaRupFolder" value="rup"/>
    <property name="udaRupZip" value="${udaRupDestDir}/rup-v${udaVersion}.zip"/>
    
    <property name="udaTemplatesBaseDir" value="${baseDir}/udaTemplates"/>
    <property name="udaTemplatesSrcDir" value="${udaTemplatesBaseDir}"/>
    <property name="udaTemplatesDestDir" value="${destDir}/udaTemplates/${udaVersion}"/>
    <property name="udaTemplatesFolder" value="templates"/>
    <property name="udaTemplatesRupFolder" value="proyecto/{{project_name}}Statics/WebContent/rup"/>
    <property name="udaTemplatesAppFolder" value="proyecto/{{project_name}}Statics/WebContent/xxx"/>
    <property name="udaTemplatesZip" value="${udaTemplatesDestDir}/templates-v${udaVersion}.zip"/>
    
    <property name="udaDemoAppBaseDir" value="${baseDir}/udaDemoApp"/>
    <property name="udaDemoAppStaticsDir" value="/x21aStatics"/>
    <property name="udaDemoAppStaticsRupDir" value="${udaDemoAppStaticsDir}/WebContent/rup"/>
    
    
    <!-- ***************************** -->
    <!-- BUILD VERSION -->
    <!-- ***************************** -->
    
    <!-- Realiza el build y generación de distribuibles de :
        - Build y generación de distribuibles de udaRup
        - Build y generación de distribuibles de udaLib
        - Actualización de udaDemoApp con los fuentes de udaRup y los números de versión
        - Actualización de udaTemplates con los fuentes de udaRup y los números de versión
    -->
    <target name="buildVersion" 
            description="Genera los distribuibles para la versión de UDA" 
            depends="buildUdaRupVersion, buildUdaDemoAppVersion, buildUdaTemplatesVersion" >
    </target>
	
    <!-- ***************************** -->
    <!-- ******** udaRup ************* -->
    <!-- ***************************** -->
    
    <!-- Realiza el build y generación de distribuibles de udaRup:
        - Actualiza los números de versión en los recursos de udaRup
        - Realiza el build de udaRup ejecutando gulp dist
        - Genera los distribuibles en la carpeta dist
    -->
    <target name="buildUdaRupVersion" 
            description="Actualiza los recursos a la versión correspondiente de udaDemoApp y genera los distribuibles" 
            depends="udaRupRenameVersion, udaRupBuild, udaRupDist" >
        
    </target>
    
    <!-- Actualiza los números de versión en los siguientes recursos:
        - package.json
        - src/**/*.js
        - src/rup.base.js
    -->
    <target name="udaRupRenameVersion" description="Modifica los numeros de versión de los entregables">
        <echo>Updating resources version...</echo>
        
        <replace file="${udaRupBaseDir}/package.json">
           <replacefilter 
            token="&quot;version&quot;: &quot;${previousUdaVersion}&quot;" 
            value="&quot;version&quot;: &quot;${udaVersion}&quot;"/>
        </replace>
        
        <replace dir="${udaRupBaseDir}/src">
            <include name="**/*.js"/>
           <replacefilter 
            token="@version ${previousUdaVersion}" 
            value="@version ${udaVersion}"/>
        </replace>
        
        <replace file="${udaRupBaseDir}/src/rup.base.js">
           <replacefilter 
            token="var rup_version = &#39;${previousUdaVersion}&#39;" 
            value="var rup_version = &#39;${udaVersion}&#39;"/>
        </replace>
    </target>
    
    <!-- Realiza el build del proyecto de UDA RUP -->
    <!-- Ejecuta la tarea npm run all -->
    <target name="udaRupBuild" description="Realiza el build de la versión actual de udaRUP">
        <echo>Building udaRUP...</echo>
        
        <exec dir="${udaRupBaseDir}" executable="npm.cmd" failonerror="true">
            <arg value="run" />
            <arg value="all:x21a" />
        </exec>
    </target>
    
    <!-- Genera los distribuibles: Carpeta rup y zip -->
    <target name="udaRupDist" description="Genera los distribuibles de RUP" depends="udaRupBuild">
        <echo>Limpiando...</echo>
        <delete dir="${udaRupDestDir}/${udaRupFolder}" />
        <delete file="${udaRupZip}" />
        
        <echo>Generando carpeta rup...</echo>
        
        <copy todir="${udaRupDestDir}/${udaRupFolder}">
            <fileset dir="${udaRupBuildDir}" />
        </copy>
        
        <echo>Generando comprimido ${udaRupZip}...</echo>
        <zip destfile="${udaRupZip}"
            basedir="${udaRupDestDir}"
            includes="${udaRupFolder}/**"
            
        />
    </target>
    
    
    <!-- ***************************** -->
    <!-- ******** udaDemoApp ************* -->
    <!-- ***************************** -->
    
    <!-- Realiza el build y generación de distribuibles de udaDemoApp:
        - Actualiza los números de versión en los recursos de udaDemoApp
        - Copia los distribuibles de la carpeta rup dentro la la aplicación udaDemoApp
        - Genera los ditribuibles en la carpeta dist
    -->
    <target name="buildUdaDemoAppVersion" 
            description="Actualiza los recursos de udaDemoApp con los fuentes de udaRup y con la versión correspondiente" 
            depends="udaRupToUdaDemoApp, udaDemoAppRenameVersion" >
        
    </target>
     
    <!-- Copia los distribuibles de la carpeta rup dentro la la aplicación udaDemoApp -->
    <target name="udaRupToUdaDemoApp" description="Copia los distribuibles de udaRup a la aplicación de ejemplo udaDemoApp">
        
        <echo>Limpiando...</echo>
        <delete dir="${udaDemoAppBaseDir}/${udaDemoAppStaticsRupDir}" />
                
        <echo>Copiando fuentes...</echo>
        <echo>Origen: ${udaRupDestDir}/${udaRupFolder}</echo>
        <echo>Destino: ${udaDemoAppBaseDir}/${udaDemoAppStaticsRupDir}</echo>
        
        
        <copy todir="${udaDemoAppBaseDir}/${udaDemoAppStaticsRupDir}">
            <fileset dir="${udaRupDestDir}/${udaRupFolder}">
                
            </fileset>
        </copy>
    </target>
    
    <target name="udaDemoAppRenameVersion" description="Modifica los numeros de versión de los resources de udaDemoApp" depends="udaRupToUdaDemoApp">
        <echo>Updating resources version...</echo>
    
        <replace file="${udaDemoAppBaseDir}/x21aEAR/pom.xml">
           <replacefilter 
            token="&lt;com.ejie.x38.version&gt;${previousUdaLibVersion}-SNAPSHOT&lt;/com.ejie.x38.version&gt;" 
            value="&lt;com.ejie.x38.version&gt;${udaLibVersion}-SNAPSHOT&lt;/com.ejie.x38.version&gt;"/>
        </replace>
        
        <replace file="${udaDemoAppBaseDir}/x21aAppWar/WebContent/WEB-INF/views/welcome.jsp">
           <replacefilter 
            token="v${previousUdaVersion}" 
            value="v${udaVersion}"/>
        </replace>
    </target> 
    
    
    
    <!-- ***************************** -->
    <!-- ******** udaTemplates ************* -->
    <!-- ***************************** -->
    
    <!-- Realiza el build y generación de distribuibles de udaTemplates:
        - Actualiza los números de versión en los recursos de udaTemplates
        - Copia los distribuibles de la carpeta rup dentro la la aplicación udaTemplates
        - Actualiza los rup*.inc de udaDemoApp dentro la la aplicación udaTemplates
        - Genera los ditribuibles en la carpeta dist
    --> 
    <target name="buildUdaTemplatesVersion" 
            description="Actualiza los recursos de udaTemplates con los fuentes de udaRup recursos de udaDemoApp y con la versión correspondiente" 
            depends="udaRupToTemplates, udaTemplatesRenameVersion, udaTemplatesDist" >
        
    </target>
    
    <!-- Copia los distribuibles de la carpeta rup dentro de los templates -->
    <target name="udaRupToTemplates" description="Copia los distribuibles de udaRup a los templates">
        
        <echo>Limpiando...</echo>
        <delete dir="${udaTemplatesBaseDir}/${udaTemplatesRupFolder}" />
        <delete file="${udaTemplatesBaseDir}/${udaTemplatesAppFolder}/styles/main.css" />
        
        <echo>Copiando fuentes...</echo>
        <echo>Origen: ${udaRupDestDir}/${udaRupFolder}</echo>
        <echo>Destino: ${udaTemplatesBaseDir}/${udaTemplatesRupFolder}</echo>
          
        <copy todir="${udaTemplatesBaseDir}/${udaTemplatesRupFolder}">
            <fileset dir="${udaRupDestDir}/${udaRupFolder}" />
        </copy>
           
    </target>
    
    <!-- udaTemplates -->
    
    <!-- Modifica los numeros de versión de los recursos 
        - pom.xml
    -->
    <target name="udaTemplatesRenameVersion" description="Modifica los numeros de versión de los resources de udaTemplates">
        <echo>Updating resources version...</echo>
        
        <replace file="${udaTemplatesSrcDir}/proyecto/{{project_name}}EAR/pom.xml.jinja">
           <replacefilter 
            token="&lt;com.ejie.x38.version&gt;${previousUdaLibVersion}-SNAPSHOT&lt;/com.ejie.x38.version&gt;" 
            value="&lt;com.ejie.x38.version&gt;${udaLibVersion}-SNAPSHOT&lt;/com.ejie.x38.version&gt;"/>
        </replace>
    </target>  
    
    <!-- udaTemplates -->
    <!-- Genera los distribuibles: Carpeta templates y zip -->
    <target name="udaTemplatesDist" description="Genera los distribuibles de los templates">
        
        <echo>Limpiando...</echo>
        <delete dir="${udaTemplatesDestDir}/${udaTemplatesFolder}" />
        <delete file="${udaTemplatesZip}" />
        
        <echo>Generando carpeta templates...</echo>
        
        <copy todir="${udaTemplatesDestDir}/${udaTemplatesFolder}">
            <fileset dir="${udaTemplatesSrcDir}"/>
        </copy>
        
        <echo>Generando comprimido ${udaRupZip}...</echo>
        <zip destfile="${udaTemplatesZip}"
            basedir="${udaTemplatesDestDir}"
            includes="${udaTemplatesFolder}/**"
            excludes="${udaTemplatesFolder}/.settings/, ${udaTemplatesFolder}/.project"
            update="true"
        />
    </target>
	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
	  <classpath>
	    <pathelement location="${ant.home}/lib/ant-contrib-1.0b3.jar"/>
	  </classpath>
	</taskdef>
		
	 <!-- Se recorren todos los test para añadirlos al specRunner -->
	<target name="copyTestToSpecRunner">
		<echo message="${udaRupDestDir}/${udaRupFolder}"/>
	  <foreach target="copyToFolderHtml" param="theFile">
	    <fileset dir="${udaRupDestDir}/${udaRupFolder}" casesensitive="yes">
	      <include name="**/*.spec.js"/>
	    </fileset>
	   </foreach>
	</target>
	
	 <!-- Se añade el include de todos los spec que existen -->
	<target name="copyToFolderHtml">
	<basename property="filename" file="${theFile}"/>	  
        <replace file="${udaDemoAppBaseDir}/${udaDemoAppStaticsRupDir}/html/specRunner.html">
           <replacefilter token="&lt;/head>" value=""/>
           <replacefilter token="&lt;body>" value=""/>
           <replacefilter token="&lt;/body>" value=""/>
           <replacefilter token="&lt;/html>" value=""/>
        </replace>
		<echo file="${udaDemoAppBaseDir}/${udaDemoAppStaticsRupDir}/html/specRunner.html" append="true">
		<![CDATA[
			 <script type="text/javascript" src="${theFile}"></script>
			</head><body></body></html>
		]]>
		</echo>
	</target>
    
</project>
